<!DOCTYPE html>
<html>
  <head>
    <title>New Sails App</title>
    <!-- Latest compiled and minified CSS -->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/css/bootstrap.min.css">
    <link href='https://fonts.googleapis.com/css?family=Permanent+Marker|Antic+Slab|Libre+Baskerville|Righteous|Lobster+Two|Rock+Salt|Didact+Gothic|Advent+Pro' rel='stylesheet' type='text/css'>
    <link href='https://fonts.googleapis.com/css?family=Permanent+Marker|Playfair+Display|Marck+Script|Walter+Turncoat|Abril+Fatface|Cinzel|Cookie|Pinyon+Script|Nothing+You+Could+Do|Homemade+Apple|Berkshire+Swash' rel='stylesheet' type='text/css'>
    <script src="//code.jquery.com/jquery-1.11.3.min.js"></script>
    <script src="//code.jquery.com/jquery-migrate-1.2.1.min.js"></script>
    <script type="text/javascript" src="/js/index.js"></script>
    <link href='https://fonts.googleapis.com/css?family=Montserrat' rel='stylesheet' type='text/css'>

<!-- Latest compiled and minified CSS -->
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/css/bootstrap.min.css">

<!-- Optional theme -->
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/css/bootstrap-theme.min.css">

<!-- Latest compiled and minified JavaScript -->
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/js/bootstrap.min.js"></script>
    <!-- Viewport mobile tag for sensible mobile support -->
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">

    <link rel="stylesheet" href="/styles/index.css" type="text/css">
    <link rel="stylesheet" href="/styles/profiles.css" type="text/css">

    <!--
        Stylesheets and Preprocessors
        ==============================

        You can always bring in CSS files manually with `<link>` tags, or asynchronously
        using a solution like AMD (RequireJS).  Or, if you like, you can take advantage
        of Sails' conventional asset pipeline (boilerplate Gruntfile).

        By default, stylesheets from your `assets/styles` folder are included
        here automatically (between STYLES and STYLES END). Both CSS (.css) and LESS (.less)
        are supported. In production, your styles will be minified and concatenated into
        a single file.

        To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:

            + Change the order of your CSS files
            + Import stylesheets from other directories
            + Use a different or additional preprocessor, like SASS, SCSS or Stylus
    -->

    <!--STYLES-->
    <link rel="stylesheet" href="/styles/homepage.css">
    <link rel="stylesheet" href="/styles/importer.css">
    <link rel="stylesheet" href="/styles/index.css">
    <link rel="stylesheet" href="/styles/profiles.css">
    <!--STYLES END-->
  </head>

  <body>
    <nav class="navbar navbar-inverse navbar-fixed-top">
      <div class="container-fluid">
        <!-- Brand and toggle get grouped for better mobile display -->
        <div class="navbar-header">
          <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1" aria-expanded="false">
            <span class="sr-only">Toggle navigation</span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
          </button>
          <a class="navbar-brand" href="/"><span class="glyphicon glyphicon-picture" aria-hidden="true"></span></a>

        </div>

        <!-- Collect the nav links, forms, and other content for toggling -->
        <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
          <ul class="nav navbar-nav">
            <li class=""><a href="#">About us <span class="sr-only">(current)</span></a></li>
            <li class=""><a href="#">Challenges <span class="sr-only">(current)</span></a></li>
            <li class="dropdown">
              <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">Artist <span class="caret"></span></a>
              <ul class="dropdown-menu">
                <li role="separator"></li>
                <li><a href="#">Designers</a></li>
                <li role="separator" class="divider"></li>
                <li><a href="#">Illustrators</a></li>
                <li role="separator" class="divider"></li>
                <li><a href="#">Media Artists</a></li>
                <li role="separator" class="divider"></li>
                <li><a href="#">Photographers</a></li>
                <li role="separator" class="divider"></li>
                <li><a href="#">Filmmakers</a></li>
                <li role="separator" class="divider"></li>
                <li><a href="#">Writers</a></li>
              </ul>
            </li>
            <li class="dropdown">
              <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">Country <span class="caret"></span></a>
              <ul class="dropdown-menu">
                <li role="separator"></li>
                <li><a href="#">Afghanistan</a></li>
                <li role="separator" class="divider"></li>
                <li><a href="#">Central African Republic</a></li>
                <li role="separator" class="divider"></li>
                <li><a href="#">Egypt</a></li>
                <li role="separator" class="divider"></li>
                <li><a href="#">Iraq</a></li>
                <li role="separator" class="divider"></li>
                <li><a href="#">Lybia</a></li>
                <li role="separator" class="divider"></li>
                <li><a href="#">Mali</a></li>
                <li role="separator" class="divider"></li>
                <li><a href="#">Myanmar</a></li>
                <li role="separator" class="divider"></li>
                <li><a href="#">Nigeria</a></li>
                <li role="separator" class="divider"></li>
                <li><a href="#">Pakistan</a></li>
                <li role="separator" class="divider"></li>
                <li><a href="#">Palestine</a></li>
                <li role="separator" class="divider"></li>
                <li><a href="#">Somalia</a></li>
                <li role="separator" class="divider"></li>
                <li><a href="#">Sudan</a></li>
                <li role="separator" class="divider"></li>
                <li><a href="#">Syria</a></li>
                <li role="separator" class="divider"></li>
                <li><a href="#">Tunisia</a></li>
              </ul>
            </li>
          </ul>

          <form class="navbar-form navbar-right" role="search">
            <div class="form-group">
              <input type="text" class="form-control" placeholder="Search">
            </div>
            <button type="submit" class="btn btn-default">Submit</button>
          </form>
          <ul class="nav navbar-nav navbar-right">
            <li><a href="#">Sign-in</a></li>
            <li><a href="#">Sign-up</a></li>
          </ul>
        </div><!-- /.navbar-collapse -->
      </div><!-- /.container-fluid -->
    </nav>
    <%- body %>


    <!--
        Client-side Templates
        ========================

        HTML templates are important prerequisites of modern, rich client applications.
        To work their magic, frameworks like Backbone, Angular, Ember, and Knockout require
        that you load these templates client-side.

        By default, your Gruntfile is configured to automatically load and precompile
        client-side JST templates in your `assets/templates` folder, then
        include them here automatically (between TEMPLATES and TEMPLATES END).

        To customize this behavior to fit your needs, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:

            + Import templates from other directories
            + Use a different template engine (handlebars, jade, dust, etc.)
            + Internationalize your client-side templates using a server-side
              stringfile before they're served.
    -->

    <!--TEMPLATES-->

    <!--TEMPLATES END-->


    <!--

      Client-side Javascript
      ========================

      You can always bring in JS files manually with `script` tags, or asynchronously
      on the client using a solution like AMD (RequireJS).  Or, if you like, you can
      take advantage of Sails' conventional asset pipeline (boilerplate Gruntfile).

      By default, files in your `assets/js` folder are included here
      automatically (between SCRIPTS and SCRIPTS END).  Both JavaScript (.js) and
      CoffeeScript (.coffee) are supported. In production, your scripts will be minified
      and concatenated into a single file.

      To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
      For example, here are a few things you could do:

          + Change the order of your scripts
          + Import scripts from other directories
          + Use a different preprocessor, like TypeScript

    -->

    <!--SCRIPTS-->
    <script src="/js/dependencies/sails.io.js"></script>
    <script src="/js/index.js"></script>
    <!--SCRIPTS END-->
  </body>
</html>
